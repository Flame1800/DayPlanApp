{"version":3,"sources":["actions/index.js","components/Sidebar.jsx","components/Navbar.jsx","routes.js","components/content/TaskList.jsx","components/content/AddTaskForm.jsx","components/content/ContentBar.jsx","App.js","reducers/index.js","index.js"],"names":["_ref4","Sidebar","react_default","a","createElement","className","Component","Navbar","ballance","this","props","src","alt","ConnectedNavbar","connect","state","host","routes","join","id","fetchTasksRequest","createAction","fetchTasksSuccess","fetchTasksFailure","removeTaskRequest","removeTaskSuccess","removeTaskFailure","editTask","completeTaskSuccess","addTaskSuccess","addMoneySuccess","deleteMoneySuccess","actionCreators","removeTask","_ref2","_ref3","Object","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","url","wrap","_context2","prev","next","axios","delete","t0","stop","_x2","apply","arguments","completeTask","_ref5","task","_ref6","_callee4","newState","_context4","patch","_x4","actions","addMoney","deleteMoney","TaskList","handleRemoveTask","_this","_this$props","price","priceWork","priceRelax","_this2","_this$props2","mode","tasks","tasksDayFetchingState","length","modedTasks","filter","map","competedTask","priceClasses","cn","task__price","price-work-theme","price-relax-theme","taskClasses","task-completed","key","textWork","textRelax","onClick","ConnectedTaskList","_state$tasksDay","tasksDay","byId","allIds","addTask","_ref","_callee","response","_context","post","sent","data","_x","AddTaskForm","handleSubmit","values","objectSpread","reset","modalToggler","text","onSubmit","Field","type","name","component","value","ConnectedAddTaskForm","reduxForm","form","ContentBar","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderButton","e","preventDefault","setState","workModalOpen","relaxModalOpen","_this$state","content_AddTaskForm","content_TaskList","App","Sidebar_Sidebar","components_Navbar","ContentBar_ContentBar","handleActions","_handleActions","defineProperty","_handleActions2","payload","_","keyBy","t","concat","toConsumableArray","omit","without","updatedTask","_handleActions3","Number","parseInt","combineReducers","formReducer","ext","window","__REDUX_DEVTOOLS_EXTENSION__","devtoolMiddleware","store","createStore","reducers","compose","applyMiddleware","thunk","_callee3","_context3","get","_x3","ReactDOM","render","react_redux_es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b74a2195.chunk.js","sourcesContent":["import { createAction } from \"redux-actions\";\r\nimport axios from \"axios\";\r\nimport routes from \"../routes.js\";\r\n\r\nexport const fetchTasksRequest = createAction(\"TASKS_FETCH_REQUEST\");\r\nexport const fetchTasksSuccess = createAction(\"TASKS_FETCH_SUCCESS\");\r\nexport const fetchTasksFailure = createAction(\"TASKS_FETCH_FAILURE\");\r\n\r\nexport const removeTaskRequest = createAction(\"TASK_REMOVE_REQUEST\");\r\nexport const removeTaskSuccess = createAction(\"TASK_REMOVE_SUCCESS\");\r\nexport const removeTaskFailure = createAction(\"TASK_REMOVE_FAILURE\");\r\n\r\nexport const editTask = createAction(\"EDIT_TASK\");\r\nexport const completeTaskSuccess = createAction(\"COMPLETE_TASK\");\r\nexport const addTaskSuccess = createAction(\"TASK_ADD_SUCCESS\");\r\n\r\nexport const addMoneySuccess = createAction(\"ADD_MONEY_SUCCSESS\");\r\nexport const deleteMoneySuccess = createAction(\"DELETE_MONEY_SUCCSESS\");\r\nexport const getBallanceSuccess = createAction(\"GET_BALLANCE_SUCCESS\");\r\n\r\nexport const getCurrentUserSuccess = createAction(\"GET_CURRENT_USER_SUCCESS\");\r\n\r\n\r\n\r\nexport const addTask = (task) => async (dispatch) => {\r\n  const url = routes.tasksDayUrl();\r\n  const response = await axios.post(url, task);\r\n  dispatch(addTaskSuccess({ task: response.data }));\r\n};\r\n\r\nexport const removeTask = ({ id }) => async (dispatch) => {\r\n  dispatch(removeTaskRequest());\r\n  try {\r\n    const url = routes.taskDayUrl(id);\r\n    await axios.delete(url);\r\n    dispatch(removeTaskSuccess({ id }));\r\n  } catch (e) {\r\n    dispatch(removeTaskFailure());\r\n    throw e;\r\n  }\r\n};\r\n\r\nexport const fetchTasks = () => async (dispatch) => {\r\n  dispatch(fetchTasksRequest());\r\n  try {\r\n    const url = routes.tasksDayUrl();\r\n    const response = await axios.get(url);\r\n    dispatch(fetchTasksSuccess({ tasks: response.data }));\r\n  } catch (e) {\r\n    dispatch(fetchTasksFailure());\r\n    throw e;\r\n  }\r\n};\r\n\r\nexport const completeTask = ({ task }) => async (dispatch) => {\r\n  const url = routes.taskDayUrl(task.id);\r\n  const newState = task.state === \"active\" ? \"finished\" : \"active\";\r\n  task.state = newState;\r\n  await axios.patch(url, task);\r\n  //dispatch(completeTaskSuccess({ id: task.id }));\r\n};\r\n\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// !!! Новая версия Actions с оперцаиями для пользователя, добавить после добавления логики текущего пользователя !!!\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport const getCurrentUser = ({ id }) => async (dispatch) => {\r\n  const url = routes.userUrl(id);\r\n  const response = await axios.get(url);\r\n  dispatch(getCurrentUserSuccess({ user: response.data }));\r\n};\r\n\r\n// export const addMoney = (user, value) => async (dispatch) => {\r\n//   const url = routes.userUrl(user.id);\r\n//   user.ballance = user.ballance + value;\r\n//   await axios.patch(url, user);\r\n// };\r\n// export const deleteMoney = (user, value) => async (dispatch) => {\r\n//   const url = routes.userUrl(user.id);\r\n//   user.ballance = user.ballance - value;\r\n//   await axios.patch(url, user);\r\n// };\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Sidebar extends Component {\r\n    render() {\r\n        return (\r\n            <div className='todo__sidebar'>\r\n                \r\n                <div className=\"todo__sidebar_list\">\r\n                    <div className=\"todo__sidebar_list_item active\">Планы на день</div>\r\n                    <div className=\"todo__sidebar_list_item\">Дальнейшие планы</div>\r\n                    <div className=\"todo__sidebar_list_item\">Статистика</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { ballance } = state;\r\n  return { ballance };\r\n};\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    const { ballance } = this.props;\r\n\r\n    return (\r\n      <div className=\"navbar\">\r\n        <div className=\"navbar__left\">\r\n          <div className=\"logo\">DayPlan</div>\r\n          <div className=\"navbar__data\">\r\n            27 Апреля, понедельник <br />\r\n            <span className=\"data__time\">18.38</span>\r\n          </div>\r\n          <div className=\"navbar__mode-button\">классический режим</div>\r\n        </div>\r\n\r\n        <div className=\"navbar__rigth\">\r\n          <div className=\"navbar__money\">\r\n            <img\r\n              src=\"https://image.flaticon.com/icons/svg/138/138233.svg\"\r\n              alt=\"0\"\r\n              className=\"money-icon\"\r\n            />{\" \"}\r\n            {ballance}\r\n          </div>\r\n          <div className=\"navbar__person\">\r\n            <div className=\"navbar__person__name\">\r\n              Василий <br /> Пупкин\r\n            </div>\r\n            <img\r\n              className=\"person__photo\"\r\n              src=\"https://img4.goodfon.ru/original/2048x1367/2/4f/lolita-portret-prelest-gubki-lokony.jpg\"\r\n              alt=\"person\"\r\n            ></img>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst ConnectedNavbar = connect(mapStateToProps, null)(Navbar);\r\nexport default ConnectedNavbar;\r\n","const host = \"http://localhost:3001\";\r\n\r\n// Create new task\r\n// POST /tasks\r\n// { task: { text: 'your text' } }\r\n\r\n// Get List Of Tasks\r\n// GET /tasks\r\n\r\n// Get Task\r\n// GET /tasks/:id\r\n\r\n// Remove Task\r\n// DELETE /tasks/:id\r\n\r\nexport default {\r\n  tasksDayUrl: () => [host, \"tasksDay\"].join(\"/\"), // get tasks list\r\n  taskDayUrl: (id) => [host, \"tasksDay\", id].join(\"/\"),\r\n  userUrl: (id) => [host, \"users\", id].join(\"/\"),\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport cn from \"classnames\";\r\n\r\nimport * as actions from \"../../actions/index.js\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  const {\r\n    tasksDayFetchingState,\r\n    tasksDay: { byId, allIds },\r\n  } = state;\r\n  const tasks = allIds.map((id) => byId[id]);\r\n  return { tasks, tasksDayFetchingState };\r\n};\r\n\r\nconst actionCreators = {\r\n  removeTask: actions.removeTask,\r\n  completeTask: actions.completeTask,\r\n  editTask: actions.editTask,\r\n  addMoney: actions.addMoneySuccess,\r\n  deleteMoney: actions.deleteMoneySuccess,\r\n};\r\n\r\nclass TaskList extends Component {\r\n  handleRemoveTask = (id) => () => {\r\n    const { removeTask } = this.props;\r\n    removeTask({ id });\r\n  };\r\n\r\n  completeTask = (task) => () => {\r\n    const { completeTask, addMoney, deleteMoney } = this.props;\r\n    completeTask({ task });\r\n    const price = task.priceWork || task.priceRelax;\r\n\r\n    if (task.priceWork) {\r\n      addMoney({ price });\r\n    }\r\n    if (task.priceRelax) {\r\n      deleteMoney({ price });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { mode, tasks, tasksDayFetchingState } = this.props;\r\n\r\n    if (tasksDayFetchingState === \"requested\") {\r\n      return (\r\n        <div>\r\n          <span>Loading...</span>\r\n        </div>\r\n      );\r\n    }\r\n    if (tasksDayFetchingState === \"failed\") {\r\n      return <span>Please, reload page!</span>;\r\n    }\r\n\r\n    if (tasks.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    const modedTasks = tasks.filter((task) => task.mode === mode);\r\n\r\n    return (\r\n      <div className=\"tasks\">\r\n        {modedTasks.map((task) => {\r\n          const competedTask = task.state === \"active\" ? false : true;\r\n          const priceClasses = cn({\r\n            task__price: true,\r\n            \"price-work-theme\": task.priceWork || false,\r\n            \"price-relax-theme\": task.priceRelax || false,\r\n          });\r\n\r\n          const taskClasses = cn({\r\n            task: true,\r\n            \"task-completed\": competedTask,\r\n          });\r\n\r\n          return (\r\n            <div className={taskClasses} key={task.id}>\r\n              <div className=\"task__text\">\r\n                {task.textWork || task.textRelax}\r\n              </div>\r\n              <div className=\"task__down\">\r\n                <div className=\"task__buttons\">\r\n                  {/* <div className=\"icon edit-button\"></div> */}\r\n                  <div\r\n                    className=\"icon delete-button\"\r\n                    onClick={this.handleRemoveTask(task.id)}\r\n                  ></div>\r\n                  {!competedTask ? (\r\n                    <div\r\n                      className=\"icon ready-button\"\r\n                      onClick={this.completeTask(task)}\r\n                    ></div>\r\n                  ) : (\r\n                    \"Задание выполненно\"\r\n                  )}\r\n                </div>\r\n                <div className=\"items-right\">\r\n                  {/* <div className=\"task__timer\">\r\n                    3ч. 56мин\r\n                  <div className=\"icon time-button\"></div> \r\n                  </div> */}\r\n                  {!competedTask && (\r\n                    <div className={priceClasses}>\r\n                      {task.priceWork || task.priceRelax || 0}$\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst ConnectedTaskList = connect(mapStateToProps, actionCreators)(TaskList);\r\nexport default ConnectedTaskList;\r\n","import React, { Component } from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm } from \"redux-form\";\r\n\r\nimport * as actions from \"../../actions/index.js\";\r\n\r\nconst actionCreators = {\r\n  addTask: actions.addTask,\r\n};\r\n\r\nclass AddTaskForm extends Component {\r\n  \r\n  handleSubmit = (mode) => (values) => {\r\n    const task = {state: \"active\", mode, ...values };\r\n    this.props.addTask(task);\r\n    this.props.reset();\r\n  };\r\n\r\n  render() {\r\n    const { mode, handleSubmit, modalToggler, text, price } = this.props;\r\n    return (\r\n      <form\r\n        className=\"form-work\"\r\n        onSubmit={handleSubmit(this.handleSubmit(mode))}\r\n      >\r\n        <div className=\"add-task-modal\">\r\n          <Field\r\n            type=\"textarea\"\r\n            name={text}\r\n            component=\"input\"\r\n            className=\"add-task-modal__input\"\r\n          />\r\n          <div className=\"add-task-modal__container\">\r\n            <div className=\"add-task-modal__price\">\r\n              Укажите цену:\r\n              <Field\r\n                type=\"text\"\r\n                name={price}\r\n                component=\"input\"\r\n                className=\"add-task-modal__price-input\"\r\n              />\r\n            </div>\r\n            <input type=\"time\" className=\"add-task-modal__set-time\" />\r\n            <input type=\"submit\" className=\"add-task-modal__acept\" value=\"\" />\r\n            <div\r\n              className=\"add-task-modal__reset\"\r\n              onClick={modalToggler(mode)}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst ConnectedAddTaskForm = connect(null, actionCreators)(AddTaskForm);\r\nexport default reduxForm({ form: \"NewTask\" })(ConnectedAddTaskForm);\r\n","import React, { Component } from \"react\";\r\nimport TaskList from \"./TaskList.jsx\";\r\nimport AddTaskForm from \"./AddTaskForm.jsx\";\r\n\r\nexport default class ContentBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { workModalOpen: false, relaxModalOpen: false };\r\n  }\r\n\r\n  renderButton = (mode) => {\r\n    return (\r\n      <div className=\"add-task\" onClick={this.modalToggler(mode)}>\r\n        Добавить задачу\r\n      </div>\r\n    );\r\n  };\r\n\r\n  modalToggler = (mode) => (e) => {\r\n    e.preventDefault();\r\n    if (mode === \"work\") {\r\n      this.setState({ workModalOpen: !this.state.workModalOpen });\r\n    }\r\n    if (mode === \"relax\") {\r\n      this.setState({ relaxModalOpen: !this.state.relaxModalOpen });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { workModalOpen, relaxModalOpen } = this.state;\r\n\r\n    return (\r\n      <div className=\"content-bar\">\r\n        <div className=\"work-list task-list\">\r\n          <div className=\"list-header\">Работа</div>\r\n          {!workModalOpen ? (\r\n            this.renderButton(\"work\")\r\n          ) : (\r\n            <AddTaskForm\r\n              mode=\"work\"\r\n              modalToggler={this.modalToggler}\r\n              text=\"textWork\"\r\n              price=\"priceWork\"\r\n            />\r\n          )}\r\n          <TaskList mode=\"work\" />\r\n        </div>\r\n        <div className=\"relax-list task-list\">\r\n          <div className=\"list-header list-header-white-theme\">Отдых</div>\r\n          {!relaxModalOpen ? (\r\n            this.renderButton(\"relax\")\r\n          ) : (\r\n            <AddTaskForm\r\n              mode=\"relax\"\r\n              modalToggler={this.modalToggler}\r\n              text=\"textRelax\"\r\n              price=\"priceRelax\"\r\n            />\r\n          )}\r\n          <TaskList mode=\"relax\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport Sidebar from './components/Sidebar.jsx';\nimport Navbar from './components/Navbar.jsx';\nimport ContentBar from './components/content/ContentBar.jsx'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"todo\">\n        <Sidebar />\n        <Navbar />\n        <ContentBar />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import _ from \"lodash\";\r\nimport { combineReducers } from \"redux\";\r\nimport { handleActions } from \"redux-actions\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport * as actions from \"../actions/index.js\";\r\n\r\nconst tasksDayFetchingState = handleActions(\r\n  {\r\n    [actions.fetchTasksRequest]() {\r\n      return \"requested\";\r\n    },\r\n    [actions.fetchTasksFailure]() {\r\n      return \"failed\";\r\n    },\r\n    [actions.fetchTasksSuccess]() {\r\n      return \"finished\";\r\n    },\r\n  },\r\n  \"none\"\r\n);\r\n\r\nconst tasksDay = handleActions(\r\n  {\r\n    [actions.fetchTasksSuccess](state, { payload }) {\r\n      return {\r\n        byId: _.keyBy(payload.tasks, \"id\"),\r\n        allIds: payload.tasks.map((t) => t.id),\r\n      };\r\n    },\r\n    [actions.addTaskSuccess](state, { payload: { task } }) {\r\n      const { byId, allIds } = state;\r\n\r\n      return {\r\n        byId: { ...byId, [task.id]: task },\r\n        allIds: [task.id, ...allIds],\r\n      };\r\n    },\r\n    [actions.removeTaskSuccess](state, { payload: { id } }) {\r\n      const { byId, allIds } = state;\r\n      return {\r\n        byId: _.omit(byId, id),\r\n        allIds: _.without(allIds, id),\r\n      };\r\n    },\r\n\r\n    [actions.completeTaskSuccess](state, { payload: { id } }) {\r\n      const task = state.byId[id];\r\n      const newState = (task.state === 'active') ? 'finished' : 'active';\r\n      const updatedTask = { ...task, state: newState };\r\n      return {\r\n        ...state,\r\n        byId: { ...state.byId, [task.id]: updatedTask },\r\n      };\r\n    },\r\n  },\r\n  { byId: {}, allIds: [] }\r\n);\r\n\r\n// Исправить под логикку для user вместо ballance\r\nconst ballance = handleActions(\r\n  {\r\n    [actions.addMoneySuccess](state, { payload: { price } }) {\r\n      const num =  Number.parseInt(price)\r\n      state += num;\r\n      return state;\r\n    },\r\n    [actions.deleteMoneySuccess](state, { payload: { price } }) {\r\n      const num =  Number.parseInt(price)\r\n      state -= num;\r\n      return state;\r\n    },\r\n  },\r\n  0\r\n);\r\n\r\nexport default combineReducers({\r\n  tasksDayFetchingState,\r\n  tasksDay,\r\n  ballance,\r\n  form: formReducer,\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import _ from \"lodash\";\r\n// import { combineReducers } from \"redux\";\r\n// import { handleActions } from \"redux-actions\";\r\n// import { reducer as formReducer } from \"redux-form\";\r\n// import * as actions from \"../actions/index.js\";\r\n\r\n// const tasksDayFetchingState = handleActions(\r\n//   {\r\n//     [actions.fetchTasksRequest]() {\r\n//       return \"requested\";\r\n//     },\r\n//     [actions.fetchTasksFailure]() {\r\n//       return \"failed\";\r\n//     },\r\n//     [actions.fetchTasksSuccess]() {\r\n//       return \"finished\";\r\n//     },\r\n//   },\r\n//   \"none\"\r\n// );\r\n\r\n// const tasksDay = handleActions(\r\n//   {\r\n//     [actions.fetchTasksSuccess](state, { payload }) {\r\n//       return {\r\n//         byId: _.keyBy(payload.tasks, \"id\"),\r\n//         allIds: payload.tasks.map((t) => t.id),\r\n//       };\r\n//     },\r\n//     [actions.addTaskSuccess](state, { payload: { task } }) {\r\n//       const { byId, allIds } = state;\r\n\r\n//       return {\r\n//         byId: { ...byId, [task.id]: task },\r\n//         allIds: [task.id, ...allIds],\r\n//       };\r\n//     },\r\n//     [actions.removeTaskSuccess](state, { payload: { id } }) {\r\n//       const { byId, allIds } = state;\r\n//       return {\r\n//         byId: _.omit(byId, id),\r\n//         allIds: _.without(allIds, id),\r\n//       };\r\n//     },\r\n\r\n//     [actions.completeTaskSuccess](state, { payload: { id } }) {\r\n//       const task = state.byId[id];\r\n//       const newState = task.state === \"active\" ? \"finished\" : \"active\";\r\n//       const updatedTask = { ...task, state: newState };\r\n//       return {\r\n//         ...state,\r\n//         byId: { ...state.byId, [task.id]: updatedTask },\r\n//       };\r\n//     },\r\n//   },\r\n//   { byId: {}, allIds: [] }\r\n// );\r\n\r\n// const user = handleActions(\r\n//   {\r\n//     [actions.getCurrentUserSuccess](state, { payload: { user } }) {\r\n//       return user;\r\n//     },\r\n//     [actions.addMoneySuccess](state, { payload: { price } }) {\r\n//       const num = Number.parseInt(price);\r\n//       state.ballance += num;\r\n//       console.log(state);\r\n//       return state;\r\n//     },\r\n//     [actions.deleteMoneySuccess](state, { payload: { price } }) {\r\n//       const num = Number.parseInt(price);\r\n//       state.ballance -= num;\r\n//       return state;\r\n//     },\r\n//   },\r\n//   {\r\n//     \"id\": 1,\r\n//     \"username\": \"admin\",\r\n//     \"name\": \"Admin\",\r\n//     \"ballance\": 0\r\n//   }\r\n// );\r\n\r\n// export default combineReducers({\r\n//   tasksDayFetchingState,\r\n//   tasksDay,\r\n//   user,\r\n//   form: formReducer,\r\n// });\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport \"./index.scss\";\nimport reducers from \"./reducers/index.js\";\nimport { fetchTasks } from \"./actions/index.js\";\n\nconst ext = window.__REDUX_DEVTOOLS_EXTENSION__;\nconst devtoolMiddleware = ext && ext();\n\nconst store = createStore(\n  reducers,\n  compose(applyMiddleware(thunk), devtoolMiddleware)\n);\n\n\nstore.dispatch(fetchTasks());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}